*************** ONSJHJSA *********************
**********************************************

**** Exception:

--> JAVA asked Dev to validate specific code for an error. For eg. To read a file, there might be high chances of file can not be found.
--> In this scenarios, JAVA forced Dev to validate the code with Exception.
--> Code execution catch the exception, and Dev can redirect the execution to another code rather than sending an error.

**** Type of catching / throwing exception.

1 -> Dev can throw Exception at the method signature.
         public static void main(String[] args) throws FileNotFoundException{

         }

2 -> Dev can surround the code with try & catch block.
                try{
                    //Reading a file should check the "File not found" exception.
                    FileReader fr = new FileReader(new File("C://test.txt"));
                }

                catch (FileNotFoundException e){
                    System.out.println("File not found!");
                }

**************************************************

**** Throwing Exception from a method:

--> Dev can throw specific exception in a method. So at the time of using that method Dev needs to catch the exception.
for eg: "readFile()" method throws FileNotFoundException.

    public static void readFile() throws FileNotFoundException{
        File file = new File("text.txt");
        FileReader fr = new FileReader(file);
    }

--> Dev needs to catch FileNotFoundException at the time of calling the method. 

