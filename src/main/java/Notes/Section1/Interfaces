**************** ONSJHJSA *****************

@@@@ Interfaces @@@@

--> Interfaces provide skeleton of methods i.e. just the name and return type of the methods.
--> Any class that implements interface should define those unimplemented methods.

eg.

/**
 * Created an interface with unimplemented method getInfo().
 * Any class implements interface "details" needs to define method getInfo().
 */
public interface details {

    public void getInfo();

}

public class Person implements details{

    @Override
    public void getInfo(){
    ....
    }
}

--> @Override : Class that implements interface should define method i.e. Override a method within the class.
              : @Override annotation is unnecessary.


--> Create object of interface with reference to the class implementing the interface.
eg.

    details objectInterface = new Person();

    Here, Dev created object of interface "details" with reference to class "Person".
    This "ObjectInterface" can only access the implemented method of Interface "details" inside the class "Person".
    But the object can not access any other methods within class "Person".

