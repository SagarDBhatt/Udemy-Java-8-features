********************************************************************************
                                ONSJHJSA
********************************************************************************

==> Comparator interface to define specific field to sort the objects.

--> Class "Person" has three properties id, age and Name.
--> Dev defined an ArrayList contains objects of class Person.

For Eg:
          ArrayList<Person> listPerson = new ArrayList<Person>();
          listPerson.add(p1);
          listPerson.add(new Person(2,28,"Rob"));
          listPerson.add(new Person(3,30,"Dan"));
          listPerson.add(new Person(4,29,"Lynn"));

--> Now, Dev can not use Collections.sort(listPerson) method to sort the objects.
        -> [There are 3 fields in Person objects. Dev needs to define based on which field compiler needs to sort the object]
        -> To achieve that Dev needs to define "Comparator" interface.

===========================================================================

--> Dev needs to create a new Class and Implements Comparator interface and define "public int Compare(Object o1, Object O2)" method.
--> Based on the result of Compare() method, Objects of given class sorted (Based on the Class Property compared)

For Eg:
Class Person has 3 properties Name, age and Id.

--> Create a class "SortByAge" and Implement Comparator Interface.

        public class SortByAge implements Comparator<Person> {
            @Override
            public int compare(Person o1, Person o2) {
                if(o1.getAge() == o2.getAge())
                    return 0;
                else if (o1.getAge() > o2.getAge())
                    return 1;
                else
                    return -1;
            }
        }

--> Comparator interface has method compare which takes two objects of the class as arguments.
--> Implementation of compare method ::

        compare object.classProperty i.e. o1.getAge() > o2.getAge() == to compare objects based on the age.
        Simillarly, o1.getName > o2.getName() ==> to compare objects based on the Name. 